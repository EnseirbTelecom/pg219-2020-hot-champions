openapi: 3.0.0
info:
  version: "1.0.0"
  title: Swagger FriendFinder
  contact:
    email: esteban.estoc@enseirb-matmeca.fr
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/EstebanEstoc/FriendFinder/1.0.0
tags:
  - name: user
    description: Opérations concernant les utilisateurs
  - name: location
    description: Opérations concernant les localisations
  - name: friends
    description: Opérations concernant les amis
paths:
  /user:
    get:
      tags:
        - user
      summary: Connexion d'un utilisateur
      operationId: login
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                email:
                  desciption: Email de l'utilisateur unique
                  type: string
                  example: toto@mail.fr
                password:
                  desciption: Mot de passe de l'utilisateur
                  type: string
                  example: 84zr2FaPC
      responses:
        '200':
          description: Successfull Authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    example : Successfull Authentification
                  jwt.token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
                  user:
                    type: object
                    properties:
                      pseudo:
                        type: string
                        example: TotoDu45
                      email: 
                        type: string
                        example: example@example.fr
                      firstName:
                        type: string
                        example: Toto
                      lastName:
                        type: string
                        example: Tata
                      birthDate:
                        type: string
                        format: date
        '403':
          description: User not found
        '405':
          description: Wrong Password
    post:
      tags:
        - user
      summary: Inscription d'un utilisateur
      operationId: signup
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                email:
                  desciption: Email de l'utilisateur unique
                  type: string
                  example: toto@mail.fr
                password:
                  desciption: Mot de passe de l'utilisateur
                  type: string
                  example: 84zr2FaPC
                firstName:
                  description: Prénom de l'utilisateur
                  type: string
                  example: Toto
                lastName:
                  description: Nom de l'utilisateur
                  type: string
                  example: Foire
                pseudo:
                  description: Pseudo de l'utilisateur
                  type: string
                  example: TotoDu45
                birthDate:
                  description: Date de naissance de l'utilisateur
                  type: string
                  format: date
      responses:
        '200':
          description: Successfull Authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    example : Successfull Authentification
                  jwt.token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
                  user:
                    type: object
                    properties:
                      pseudo:
                        type: string
                        example: TotoDu45
                      email: 
                        type: string
                        example: example@example.fr
                      firstName:
                        type: string
                        example: Toto
                      lastName:
                        type: string
                        example: Tata
                      birthDate:
                        type: string
                        format: date
        '402':
          description: User already exist
  /user/location:
    get:
      tags:
        - user
      summary: Récupérer position courante de l'utilisateur
      operationId: getCurrendLocation
      requestBody:
          description: Object permettant de passer les paramètres du formulaire
          required: true
          content:
            application/json:
              schema:
                type: object
                properties: 
                  jwt.token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
                  
      responses:
        '200':
          description: Successfull Authentification
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: object
                    properties:
                      lng:
                        type: number
                        example: 54.30
                      lat:
                        type: number
                        example: 60.45
                  time:
                    type: object
                    properties:
                      date:
                        type: string
                        format: date
                      hour:
                        type: string
                        example: 10h20
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          description: Request Error

        '406':
          description: No location found
      security:
      - tokenAuth: []
  /friends:
    post:
      tags:
        - friends
      summary: Demande d'amis
      operationId: addFriends
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                friendEmail:
                  desciption: Email de l'ami à ajouter
                  type: string
                  example: toto@mail.f
                jwt.token:
                      type: string
                      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4    
      responses:
        '200':
          description: Successfull Authentification
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          description: Request Error
        '403':
          description: User not found
      security:
      - tokenAuth: []
    put:
      tags:
        - friends
      summary: Accepter demande d'ami
      operationId: acceptFriends
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                friendEmail:
                  desciption: Email de l'ami à ajouter
                  type: string
                  example: toto@mail.f
                jwt.token:
                      type: string
                      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
      responses:
        '200':
          description: Successfull Authentification
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          description: Request Error
        '407':
          description: Friend request no longer available
      security:
      - tokenAuth: []
    delete:
      tags:
        - friends
      summary: Supprimer ami ou demande d'ami
      operationId: acceptFriends
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                friendEmail:
                  desciption: Email de l'ami à ajouter
                  type: string
                  example: toto@mail.f
                jwt.token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
      responses:
        '200':
          description: Successfull Authentification
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          description: Request Error
        '407':
          description: Friend request no longer available
        '403':
          description: User not found
      security:
      - tokenAuth: []
    get:
      tags:
        - friends
      summary: Récupérer la liste des amis
      operationId: getFriends
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                jwt.token:
                      type: string
                      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4   
      responses:
        '200':
          description: Successfull Authentification
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    location:
                      type: object
                      properties:
                        lng:
                          type: number
                          example: 54.30
                        lat:
                          type: number
                          example: 60.45
                    pseudoFriend:
                      type: string
                      example: Bidule48
                    color:
                      type: string
                      example: "#ddf45"
                    status:
                      type: bool
                      example: false
          
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '400':
          description: Request Error
        '403':
          description: User not found
      security:
      - tokenAuth: []   
  
  /location:
    get:
      tags:
        - location
      summary: Récupérer l'historique des positions
      operationId: history
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                jwt.token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4  
      responses:
        '200':
          description: Successfull Authentification
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    location:
                      type: object
                      properties:
                        longitude:
                          type: number
                          example: 54.30
                        latitude:
                          type: number
                          example: 60.45
                    time:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        hour:
                          type: string
                          example: 10h20

        '400':
          description: Request Error
        '406':
          description: No location found
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - tokenAuth: []
    post:
      tags:
        - location
      summary: Ajouter la position courante
      operationId: add
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                form:
                  type: object
                  properties:
                    location:
                      type: object
                      properties:
                        longitude:
                          type: number
                          example: 54.30
                        latitude:
                          type: number
                          example: 60.45
                    time:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        hour:
                          type: string
                          example: 10h20
                    message:
                      type: string
                      example: Courses
                    validity:
                      type: integer
                      description: Durée de validité en heure
                      example: 2
                jwt.token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
      responses:
        '200':
          description: Successfull Authentification
        '400':
          description: Request Error
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - tokenAuth: []
    put:
      tags:
        - location
      summary: Archiver la position courante
      operationId: archive
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                form:
                  type: object
                  properties:
                    location:
                      type: object
                      properties:
                        longitude:
                          type: number
                          example: 54.30
                        latitude:
                          type: number
                          example: 60.45
                    time:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        hour:
                          type: string
                          example: 10h20
                    validity:
                      type: integer
                      description: Durée de validité en heure
                      example: 2
                jwt.token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
      responses:
        '200':
          description: Successfull Authentification
        '400':
          description: Request Error
        '406':
          description: No location found
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - tokenAuth: []
    delete:
      tags:
        - location
      summary: Supprimer une position
      operationId: delete
      requestBody:
        description: Object permettant de passer les paramètres du formulaire
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: 
                form:
                  type: object
                  properties:
                    location:
                      type: object
                      properties:
                        longitude:
                          type: number
                          example: 54.30
                        latitude:
                          type: number
                          example: 60.45
                    time:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        hour:
                          type: string
                          example: 10h20
                    validity:
                      type: integer
                      description: Durée de validité en heure
                      example: 2
                jwt.token:
                  type: string
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE0ODA5MjkyODIsImV4cCI6MTQ4MDkzMjg2OCwibmFtZSI6IlVzZXJuYW1lIn0.gZeuWNbjO8kyEX92AjgX5oLy5qhu6YWTPr6vtYELZQ4
      responses:
        '200':
          description: Successfull Authentification
        '400':
          description: Request Error
        '406':
          description: No location found
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - tokenAuth: []
components:
  securitySchemes:
    tokenAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid